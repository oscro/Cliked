{"version":3,"sources":["components/Nav/index.js","components/ImageBox/index.js","components/MemPick/index.js","App.js","index.js"],"names":["NavBar","react_default","a","createElement","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","ImageBox","state","MemoryImages","clicked","handleClick","click","_this","setState","console","log","src","this","props","alt","key","onClick","Component","MemPick","keys","randomize","items","Math","floor","random","length","displayImage","arry","components_ImageBox","image","id","_this2","map","App","Nav","components_MemPick","ReactDOM","render","src_App","document","getElementById"],"mappings":"8KAgBeA,MAdf,WACI,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iDACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeC,KAAK,KAAjC,UACAJ,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBE,KAAK,SAASC,cAAY,WAAWC,cAAY,aAAaC,gBAAc,YAAYC,gBAAc,QAAQC,aAAW,qBACxJV,EAAAC,EAAAC,cAAA,QAAMC,UAAU,sEC2ErBQ,oNA7EXC,MAAQ,CACJC,eACAC,QAAS,KAGbC,YAAc,WACV,IAAIC,EAAQC,EAAKL,MAAME,QAAU,EAEjCG,EAAKC,SAAS,CACVJ,QAASE,IAGbG,QAAQC,IAAI,2BAA6BH,EAAKL,MAAMC,aAAe,mBAAqBI,EAAKL,MAAME,kFAMnG,OACId,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,OACIC,UAAU,mCACVkB,IAAKC,KAAKC,MAAMF,IAChBG,IAAI,GACJC,IAAKH,KAAKC,MAAME,IAChBC,QAASJ,KAAKP,sBA3BXY,cC2DRC,oNAvDXhB,MAAQ,CAEJiB,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,OAW7CC,UAAY,SAAUC,GAIlB,OAAOA,EAAMC,KAAKC,MAAMD,KAAKE,SAAWH,EAAMI,YAWlDC,aAAe,SAAUC,EAAMZ,GAC3B,OACIzB,EAAAC,EAAAC,cAACoC,EAAD,CACIjB,IAAKgB,EAAKZ,GAAKc,MACfd,IAAKY,EAAKG,8EAOb,IAAAC,EAAAnB,KACL,OACItB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACdmB,KAAKV,MAAMiB,KAAKa,IAAI,SAAAb,GAAI,OACzBY,EAAKL,aAAavB,EAAc4B,EAAKX,UAAUW,EAAK7B,MAAMiB,mBA/CxDF,cCQPgB,MAVf,WAEE,OACE3C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC0C,EAAD,MACA5C,EAAAC,EAAAC,cAAC2C,EAAD,QCLNC,IAASC,OAAO/C,EAAAC,EAAAC,cAAC8C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.3491e0c9.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction NavBar() {\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <a className=\"navbar-brand\" href=\"#\">Cliked</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n            </nav>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default NavBar;","import React, { Component } from \"react\";\r\nimport MemoryImages from \"../../gameImages.json\";\r\nimport \"./style.css\"\r\n\r\nclass ImageBox extends Component {\r\n\r\n    state = {\r\n        MemoryImages,\r\n        clicked: 0\r\n    };\r\n\r\n    handleClick = () => {\r\n        let click = this.state.clicked + 1;\r\n        // event.target.data-clicked + 1;\r\n        this.setState({\r\n            clicked: click\r\n        });\r\n        // ()=>image.image.clicked = image.image.clicked + 1)\r\n        console.log(\"This image was clicked: \" + this.state.MemoryImages + \" Times clicked: \" + this.state.clicked);\r\n    }\r\n\r\n    // src={this.state.MemoryImages[this.props.key].image}\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-6\">\r\n                <img\r\n                    className=\"img-thumbnail rounded float-left\"\r\n                    src={this.props.src}\r\n                    alt=\"\"\r\n                    key={this.props.key}\r\n                    onClick={this.handleClick}\r\n                />\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\n// render() {\r\n\r\n//     return (\r\n//         <div>\r\n//             {this.state.MemoryImages.map(image => (\r\n//                 <div \r\n//                 onClick={() => this.handleClick()}\r\n//                 >\r\n//                 <img\r\n//                     className=\"img-thumbnail rounded float-left col-6\"\r\n//                     src={image.image}\r\n//                     alt=\"\"\r\n//                     data-clicked={this.props.clicked}\r\n//                     onClick={()=>this.randomize(this.state.MemoryImages)}\r\n//                 />\r\n//                 </div>\r\n//             ))}\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// randomize = function (array) {\r\n\r\n//     var currentIndex = array.length, temporaryValue, randomIndex;\r\n\r\n//     // While there remain elements to shuffle...\r\n//     while (0 !== currentIndex) {\r\n\r\n//         // Pick a remaining element...\r\n//         randomIndex = Math.floor(Math.random() * currentIndex);\r\n//         currentIndex -= 1;\r\n\r\n//         // And swap it with the current element.\r\n//         temporaryValue = array[currentIndex];\r\n//         array[currentIndex] = array[randomIndex];\r\n//         array[randomIndex] = temporaryValue;\r\n//     }\r\n\r\n//     console.log(array);\r\n//     this.setState({ MemoryImages: array });\r\n// };\r\n// {this.randomize(this.state.MemoryImages)}\r\n\r\n\r\n\r\nexport default ImageBox;","import React, { Component } from \"react\";\r\nimport ImageBox from \"../ImageBox\";\r\nimport MemoryImages from \"../../gameImages.json\";\r\nimport \"./style.css\"\r\n\r\n\r\nclass MemPick extends Component {\r\n\r\n    state = {\r\n        // An array of keys\r\n        keys: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]\r\n    }\r\n\r\n    // createIds = (MemoryImages) => {\r\n    //     let arry = [];\r\n    //     for (let i = 0; i < MemoryImages.length; i++) {\r\n    //         arry.push(MemoryImages[i].id);\r\n    //     }\r\n    //     return arry;\r\n    // }\r\n\r\n    randomize = function (items) {\r\n        // this.state.keys.sort(function (a, b) {\r\n        //     return (0.5 - Math.random());\r\n        // });\r\n        return items[Math.floor(Math.random() * items.length)];\r\n    }\r\n\r\n    // iterator = function (arry) {\r\n\r\n    //     for(let i = 0; i < arry.length; i ++) {\r\n    //         {this.displayImage(MemoryImages, this.randomize(this.state.keys))}\r\n    //     }\r\n\r\n    // }\r\n\r\n    displayImage = function (arry, key) { \r\n        return (\r\n            <ImageBox\r\n                src={arry[key].image}\r\n                key={arry.id}\r\n            // clicked={this.state.clicked}\r\n            // onClick={() => this.handleClick()}\r\n            />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                    {this.state.keys.map(keys => (\r\n                    this.displayImage(MemoryImages, this.randomize(this.state.keys))\r\n                    ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default MemPick;","import React from \"react\";\nimport NavBar from \"./components/Nav\";\nimport MemPick from \"./components/MemPick\";\n\nfunction App() {\n\n  return (\n    <div>\n      <NavBar />\n      <MemPick />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}